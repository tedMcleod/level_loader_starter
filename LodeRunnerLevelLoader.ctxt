#BlueJ class context
comment0.target=LodeRunnerLevelLoader
comment0.text=\r\n\ This\ is\ a\ specialized\ level\ loader\ that\ has\ convience\ methods\ for\ defining\ the\ symbols\ associated\ with\ common\ classes\ in\ Lode\ Runner.\r\n\ It\ also\ can\ load\ a\ level\ given\ just\ the\ level\ number.\r\n\ To\ load\ level\ N,\ it\ loads\ the\ Nth\ file\ in\ the\ levels\ folder\ when\ sorted\ in\ alphabetical\ order.\r\n\ \r\n\ @author\ Ted\ McLeod\r\n\ @version\ 3/24/2022\r\n
comment1.params=world
comment1.target=LodeRunnerLevelLoader(greenfoot.World)
comment1.text=\ A\ constructor\ that\ creates\ a\ LodeRunnerLevelLoader\ to\ load\ levels\ in\ the\ given\ world.\r\n\ \r\n\ @param\ world\ the\ world\ to\ load\ levels\ in\r\n
comment10.params=cls
comment10.target=void\ setUndiggableWallClass(java.lang.Class)
comment10.text=\r\n\ sets\ the\ class\ that\ should\ be\ used\ to\ represent\ undiggable\ walls\r\n\ \r\n\ @param\ cls\ the\ class\ that\ represents\ undiggable\ walls\r\n
comment11.params=
comment11.target=java.lang.String[]\ getLevels()
comment11.text=\r\n\ Gets\ an\ array\ of\ all\ the\ levels\ in\ the\ levels\ folder\ or\ returns\ null\ if\ there\ is\ no\ levels\ folder.\r\n\ \r\n\ @return\ an\ array\ of\ all\ the\ levels\ in\ the\ levels\ folder\ or\ null\ if\ no\ levels\ folder\ exists\r\n
comment12.params=a\ b
comment12.target=int\ compare(java.io.File,\ java.io.File)
comment13.params=
comment13.target=int\ numLevels()
comment13.text=\r\n\ returns\ the\ number\ of\ levels\ in\ the\ levels\ folder\r\n\ \r\n\ @return\ the\ number\ of\ levels\ in\ the\ levels\ folder.\r\n
comment14.params=level\ offX\ offY
comment14.target=void\ loadLevel(int,\ int,\ int)
comment14.text=\r\n\ Loads\ the\ given\ level\ with\ the\ boundaries\ of\ the\ level\ offset\ by\ the\ given\ (offX,\ offY)\r\n
comment15.params=level
comment15.target=java.lang.String\ getLevelPath(int)
comment15.text=\r\n\ returns\ the\ file\ path\ to\ the\ given\ level,\ where\ levels\ are\ the\ files\ in\ the\ levels\ folder\ of\ the\ project.\r\n\ For\ example,\ LodeRunnerLevelLoader.getLevelPath(3)\ would\ return\ the\ path\ to\ the\ third\ file\ in\ the\ levels\ folder\r\n\ when\ they\ are\ listed\ alphabetically.\ If\ there\ is\ no\ such\ file,\ an\ exception\ will\ be\ thrown.\r\n\ \r\n\ @return\ the\ file\ path\ to\ the\ given\ level\r\n
comment2.params=cls
comment2.target=void\ setWallClass(java.lang.Class)
comment2.text=\r\n\ sets\ the\ class\ that\ should\ be\ used\ to\ represent\ walls\r\n\ \r\n\ @param\ cls\ the\ class\ that\ represents\ walls\r\n
comment3.params=cls
comment3.target=void\ setGoldClass(java.lang.Class)
comment3.text=\r\n\ sets\ the\ class\ that\ should\ be\ used\ to\ represent\ gold\r\n\ \r\n\ @param\ cls\ the\ class\ that\ represents\ gold\r\n
comment4.params=cls
comment4.target=void\ setLadderClass(java.lang.Class)
comment4.text=\r\n\ sets\ the\ class\ that\ should\ be\ used\ to\ represent\ ladders\r\n\ \r\n\ @param\ cls\ the\ class\ that\ represents\ ladders\r\n
comment5.params=cls
comment5.target=void\ setBarClass(java.lang.Class)
comment5.text=\r\n\ sets\ the\ class\ that\ should\ be\ used\ to\ represent\ bars\r\n\ \r\n\ @param\ cls\ the\ class\ that\ represents\ bars\r\n
comment6.params=cls
comment6.target=void\ setPlayerClass(java.lang.Class)
comment6.text=\r\n\ sets\ the\ class\ that\ should\ be\ used\ to\ represent\ players\r\n\ \r\n\ @param\ cls\ the\ class\ that\ represents\ players\r\n
comment7.params=cls
comment7.target=void\ setEnemyClass(java.lang.Class)
comment7.text=\r\n\ sets\ the\ class\ that\ should\ be\ used\ to\ represent\ enemies\r\n\ \r\n\ @param\ cls\ the\ class\ that\ represents\ enemies\r\n
comment8.params=cls
comment8.target=void\ setFalseWallClass(java.lang.Class)
comment8.text=\r\n\ sets\ the\ class\ that\ should\ be\ used\ to\ represent\ false\ walls\r\n\ \r\n\ @param\ cls\ the\ class\ that\ represents\ false\ walls\r\n
comment9.params=cls
comment9.target=void\ setWinLadderClass(java.lang.Class)
comment9.text=\r\n\ sets\ the\ class\ that\ should\ be\ used\ to\ represent\ win\ ladders\r\n\ \r\n\ @param\ cls\ the\ class\ that\ represents\ win\ ladders\r\n
numComments=16
